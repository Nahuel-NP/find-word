---
import Modal from "../components/Modal.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Acierta la palabra">
  <main class="min-h-svh grid place-items-center relative">
    <div class="fixed -z-10 h-full w-full bg-slate-950">
      <div
        class="absolute bottom-0 left-0 right-0 top-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:14px_24px]"
      >
      </div>
    </div>
    <div class="grid grid-cols-1 gap-1" id="words-grid"></div>
    <div
      class="flex flex-wrap w-full p-2 justify-center max-w-lg gap-1"
      id="btns-container"
    >
    </div>
    <Modal title="Ganaste" description="Lo hiciste excelente!" />
  </main>
</Layout>

<script>
  import { buttons } from "../data/buttons";
  import { words } from "../data/words";
  import { matriz, game } from "../utils/game";

  function showModal() {
    const modal = document.querySelector("#default-modal");
    modal?.classList.remove("hidden");
    modal?.classList.add("flex");
  }

  const btnsContainer = document.querySelector("#btns-container");
  const grid = document.querySelector("#words-grid");

  buttons.forEach((el, index) => {
    const btn = document.createElement("button");
    btn.className = ` rounded-md keyboard-btn qwerty transition-colors  w-full text-sm h-14 bg-white border text-center border-gray-400 ${index === 20 || index === 28 ? "max-w-[14%]" : "max-w-[9%]"}`;
    btn.textContent = el;
    btn.id = "Letter-" + el;

    if (el !== "Enviar" && el !== "Borrar") {
      btn.addEventListener("click", () => {
        addLetter(el);
      });
    }
    if (el === "Borrar") {
      btn.addEventListener("click", () => {
        removeLetter();
      });
    }
    if (el === "Enviar") {
      btn.addEventListener("click", () => {
        send();
      });
    }
    btnsContainer?.appendChild(btn);
  });

  function renderGrid() {
    matriz.forEach((array, i) => {
      const row = document.createElement("div");
      row.className = "grid grid-cols-5 gap-1";
      row.id = "row-" + i;

      array.forEach((el, j) => {
        const element = document.createElement("span");
        element.id = `row-${i}-cell-${j}`;
        element.className =
          "bg-white rounded-md cell font-semibold transition-colors border-gray-400 border size-16 flex text-5xl justify-center items-center ";
        row?.appendChild(element);
      });

      grid?.appendChild(row);
    });
  }

  function addLetter(value: string) {
    const index = matriz[game.activeArray].indexOf("0");
    if (index !== -1) {
      matriz[game.activeArray][index] = value;
      document.querySelector(
        `#row-${game.activeArray}-cell-${index}`
      )!.textContent = value;
    }
  }

  function removeLetter() {
    const index = matriz[game.activeArray].indexOf("0");

    if (index !== -1 && index !== 0) {
      document.querySelector(
        `#row-${game.activeArray}-cell-${index - 1}`
      )!.textContent = " ";
      matriz[game.activeArray][index - 1] = "0";
    } else {
      matriz[game.activeArray][4] = "0";
      document.querySelector(
        `#row-${game.activeArray}-cell-${4}`
      )!.textContent = " ";
    }
  }

  function send() {
    const myWord = matriz[game.activeArray].join("");
    if (matriz[game.activeArray].includes("0")) {
      window.alert("Palabra incompleta");
    } else {
        verifyWord(myWord);
    }
  }

  document.addEventListener("keydown", (evt) => {
    const letter = evt.key.toUpperCase();
    if (game.activeArray !== 10) {
      if (buttons.includes(letter)) {
        addLetter(letter);
      }
      if (letter === "BACKSPACE") {
        removeLetter();
      }
      if (letter === "ENTER") {
        send();
      }
    }
  });

  function verifyWord(writedWord: string) {
    let color: "bg-green-400" | "bg-gray-400" | "bg-yellow-400";
    let restLetters = game.word.split("");

    // verifica letras en posicion correcta
    let trueCounter = 0;

    for (let i = 0; i < game.word.length; i++) {
      if (writedWord[i] === game.word[i]) {
        color = "bg-green-400";
        changeElementColor(writedWord[i], color, i);
        restLetters[i] = "";
        trueCounter++;
      }
    }

    //verifica letras en posicion incorrecta
    for (let i = 0; i < writedWord.length; i++) {
      if (
        writedWord[i] !== game.word[i] &&
        restLetters.includes(writedWord[i])
      ) {
        color = "bg-yellow-400";
        changeElementColor(writedWord[i], color, i);
        restLetters[restLetters.indexOf(writedWord[i])] = "";
      }
    }

    // letras no validas
    for (let i = 0; i < writedWord.length; i++) {
      color = "bg-gray-400";
      changeElementColor(writedWord[i], color, i);
    }

    if (trueCounter === 5) {
      setTimeout(() => {
        showModal();
      }, 1000);
      game.activeArray = 10;
    } else {
      game.activeArray++;
    }

    if (game.activeArray === 6) {
      window.alert(`Perdiste!! la palabra era ${game.word}`);
    }
  }

  function changeElementColor(char: string, color: string, index: number) {
    const button = document.querySelector(`#Letter-${char.toUpperCase()}`);

    if (!button?.classList.contains("bg-green-400")) {
      if (
        button?.classList.contains("bg-yellow-400") &&
        color === "bg-green-400"
      ) {
        button?.classList.remove("bg-white", "bg-yellow-400");
        button?.classList.add(color);
      } else {
        button?.classList.remove("bg-white");
        button?.classList.add(color);
      }
    }

    const cell = document.querySelector(
      `#row-${game.activeArray}-cell-${index}`
    );

    cell?.classList.remove("bg-white");
    cell?.classList.add(color);
  }

  renderGrid();
</script>
